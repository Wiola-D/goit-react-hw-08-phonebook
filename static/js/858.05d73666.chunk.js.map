{"version":3,"file":"static/js/858.05d73666.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-07-phonebook/./src/styles/ContactForm.module.css?3f1b","components/ContactForm.jsx","webpack://goit-react-hw-07-phonebook/./src/styles/Filter.module.css?2c48","components/Filter.jsx","redux/filters/selectors.js","webpack://goit-react-hw-07-phonebook/./src/styles/ContactList.module.css?45bf","webpack://goit-react-hw-07-phonebook/./src/styles/Contact.module.css?a7f5","components/Contact.jsx","components/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\n// export const selectIsLoading = state => state.contacts.isLoading;\n\n// export const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__myy-u\",\"input\":\"ContactForm_input__OzXQ9\"};","// import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../redux/contacts/API';\nimport { selectContacts } from '../redux/contacts/selectors';\nimport css from '../styles/ContactForm.module.css';\nimport { useEffect } from 'react';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    console.log(contacts);\n  }, [contacts]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const name = form[0].value;\n    const phone = form[1].value;\n    const newContact = { name, phone };\n    console.log(newContact);\n\n    const nameExists = contacts.some(contact => contact.name === name);\n\n    if (nameExists) {\n      alert(name + ' is already in contacts.');\n    } else {\n      dispatch(addContact(newContact));\n    }\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={css.container}>\n        <label htmlFor=\"nameInput\">Name</label>\n        <input\n          type=\"text\"\n          className={css.input}\n          name=\"name\"\n          id=\"nameInput\"\n          pattern=\"^[a-zA-Zа-яА-Я]+((['\\s\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n          required\n          placeholder=\"Enter the name\"\n        />\n      </div>\n      <div className={css.container}>\n        <label htmlFor=\"numberInput\">Number</label>\n        <input\n          type=\"text\"\n          name=\"number\"\n          className={css.input}\n          id=\"numberInput\"\n          pattern=\"^\\+((?:9[679]|8[035789]|6[789]|5[90]|42|3[578]|2[1-689])|9[0-58]|8[1246]|6[0-6]|5[1-8]|4[013-9]|3[0-469]|2[70]|7|1)(?:\\W*\\d){0,13}\\d$\"\n          title=\"Phone number must start with +\"\n          required\n          placeholder=\"Enter the number\"\n        />\n      </div>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n  //   return (\n  //     <form>\n  //       <div className=\"container\">\n\n  //     </form>\n  //   );\n};\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Filter_inputContainer__xDvLq\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../redux/filters/filterSlice';\nimport { nanoid } from '@reduxjs/toolkit';\nimport css from '../styles/Filter.module.css';\n\nconst Filter = () => {\n  const filterInputId = nanoid();\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => {\n    const filter = evt.target.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div className={css.inputContainer}>\n      <input\n        onChange={handleFilter}\n        type=\"text\"\n        name=\"filter\"\n        id={filterInputId}\n        pattern=\"^[a-zA-Zа-яА-Я]+((['\\s\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        placeholder=\"Find contacts by name\"\n      />\n    </div>\n  );\n};\nexport default Filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from '../contacts/selectors';\n\nexport const selectFilter = state => state.filter.status;\n\nexport const selectfilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name &&\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"noContacts\":\"ContactList_noContacts__7EQR7\",\"list\":\"ContactList_list__S7udm\",\"listItem\":\"ContactList_listItem__K0qNb\"};","// extracted by mini-css-extract-plugin\nexport default {\"buttonDelete\":\"Contact_buttonDelete__OuMMD\",\"container\":\"Contact_container__pmibH\",\"liName\":\"Contact_liName__jEWAR\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contacts/API';\nimport css from '../styles/Contact.module.css';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <div className={css.container}>\n        <p className={css.liName}>{contact.name}: </p>\n        <p>{contact.phone}</p>\n      </div>\n      <button className={css.buttonDelete} onClick={handleDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\nexport default Contact;\n","import { useSelector } from 'react-redux';\nimport { selectfilteredContacts } from '../redux/filters/selectors';\nimport css from '../styles/ContactList.module.css';\nimport Contact from './Contact';\nimport { useEffect } from 'react';\n\nconst ContactsList = () => {\n  const filteredContacts = useSelector(selectfilteredContacts);\n\n  useEffect(() => {\n    console.log(filteredContacts);\n  }, [filteredContacts]);\n  return (\n    <>\n      {filteredContacts && filteredContacts.length > 0 ? (\n        <ul className={css.list}>\n          {filteredContacts.map(contact => (\n            <li className={css.listItem} key={contact.id}>\n              <Contact contact={contact} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={css.noContacts}>No contacts</p>\n      )}\n    </>\n  );\n};\nexport default ContactsList;\n","import ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport { Helmet } from 'react-helmet';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","dispatch","useDispatch","useSelector","useEffect","console","log","_jsxs","onSubmit","event","preventDefault","form","target","name","value","phone","newContact","some","contact","alert","addContact","reset","children","className","css","_jsx","htmlFor","type","id","pattern","title","required","placeholder","filterInputId","nanoid","onChange","evt","filter","setFilter","selectfilteredContacts","createSelector","status","toLowerCase","includes","_ref","_Fragment","onClick","deleteContact","filteredContacts","length","map","Contact","Helmet","ContactForm","Filter","ContactList"],"sourceRoot":""}